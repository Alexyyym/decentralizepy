[GRAPH]
package = decentralizepy.graphs.SmallWorld
graph_class = SmallWorld

[DATASET]
dataset_package = decentralizepy.datasets.Femnist
dataset_class = Femnist
model_class = LogisticRegression
n_procs = 1.0
train_dir = leaf/data/femnist/data/train
test_dir = 
; python list of fractions below
sizes = [0.4, 0.2, 0.3, 0.1]

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.1

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training
epochs_per_round = 25
batch_size = 64
shuffle = False
loss_package = torch.nn.functional
loss = nll_loss

[COMMUNICATION]
comm_package = decentralizepy.communication.Communication
comm_class = Communcation

[SHARING]
sharing_package = decentralizepy.sharing.Sharing
sharing_class = Sharing